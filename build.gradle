plugins {
	id "io.freefair.lombok" version "5.3.0"
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'checkstyle'
	apply plugin: 'jacoco'
	apply plugin: 'pmd'
	apply plugin: 'io.freefair.lombok'

	jacoco {
		toolVersion = "0.8.6"
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.1'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.4.1'
		implementation 'org.springframework.boot:spring-boot-starter-web:2.4.1'
		implementation 'org.apache.httpcomponents:httpclient'
		implementation 'com.google.code.gson:gson'
		implementation 'io.jsonwebtoken:jjwt:0.9.1'
		implementation 'javax.xml.bind:jaxb-api:2.3.1'
		implementation 'org.hibernate:hibernate-core:5.4.26.Final'
		implementation 'mysql:mysql-connector-java:8.0.22'

		testImplementation 'com.h2database:h2:1.4.200'
		testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.1'
		testImplementation 'org.mockito:mockito-core:3.6.28'
		testImplementation 'org.mockito:mockito-inline:3.6.28'
		testImplementation(platform('org.junit:junit-bom:5.7.0'))
		testImplementation('org.junit.jupiter:junit-jupiter')
	}

	repositories {
		mavenCentral()
	}


	tasks.named('test') {
		useJUnitPlatform()
		jacoco {
			enabled = true
		}
		enabled = gradle.startParameter.taskNames.contains('test')
	}

	jacocoTestReport {
		dependsOn test
	}

	jacocoTestCoverageVerification() {
		dependsOn test
		violationRules {
			rule {
				enabled = true
				element = 'CLASS'

				limit {
					counter = 'BRANCH'
					value = 'COVEREDRATIO'
					minimum = 0.1
				}
			}
		}
	}

	checkstyle {
		toolVersion "8.37"
		configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
		configProperties = [
				'checkstyle.cache.file': "${buildDir}/checkstyle.cache",
		]
		ignoreFailures = false
		maxErrors = 0
		maxWarnings = 0
		sourceSets = []
	}

	pmd {
		incrementalAnalysis = true
		sourceSets = []
	}
}